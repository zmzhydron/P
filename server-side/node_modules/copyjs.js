var fs = require('fs');
var path = require('path');

var origin,
	target,
	dirStr = '',
	syncType,
	options = {'encoding':"utf-8",'flag':'w+'};

function checkPath(){
	return fs.existsSync(origin);
}	
/*
	读取、写入文件 分别有同步和异步的区分.
	pipe流。
	读取、创建文件夹。
*/

//读取文件
function openFile(){
	var fd = fs.openSync(origin,'r');
	console.log(fd);
	fs.open(origin,'w',function(error,fd){
		if(error){
			console.log('error');
		}else{
			console.log('finished');
			console.log(fd);
		}
	})
}

//写入文件 必须得到一个文件表示符才能操作；
function writeFile(){
	switch(syncType){
		case 'sync':
			//同步写入 
			var fd = fs.openSync(origin,'w+');
			var result = fs.writeSync(fd,'11111粗口啦');
		break;
		case 'simple':
		//简单写入
		fs.writeFile(origin,'shen电饭锅电饭锅国度地方g',options,function(error){
			if(error){
				console.log("error");
			}else{
				console.log('完成啦');
			}
		})
		break;
		case 'async':
			console.log('asnyc');
			var wirteFn = function(fd){
				fs.write(fd,'fuck you man',null,null,function(error){
					if(error){

					}else{
						console.log('asnyc write complete');
					}
				})
			}
			fs.open(origin,'w+',function(error,fd){
				if(error){

				}else{
					wirteFn(fd);
				}
			});
		break;
	}
}

//文件夹
function oprateDirectors(req,res,next){
	var string = '',
		count = 0;
	function output(total){
		count++;
		if(count === total){
			res.send(string);
		}
	}
	function walk(paths){
		fs.readdir(paths,function(error,fd){
			console.log(fd.length);
			for(var s = 0,len = fd.length;s<len;s++){
				var fullpath = path.join(paths,fd[s]);
				+function(fullpath){
					fs.stat(fullpath,function(error,stats){
						if(stats && stats.isFile()){
							// console.log(fullpath);
							string += fullpath +" </br>";
							// output(len);
						}
						else if(stats && stats.isDirectory()){
							walk(fullpath);
						}
					})
				}(fullpath);
			}
		})	
	}
	walk(target);
}

//流
function stream(){
	console.log(checkPath());
	var writeStream = fs.createWriteStream(origin,options);
	writeStream.on('close',function(){
		console.log('wirteStream closed')
	})
	writeStream.write('1111111111111111111');
	writeStream.end();

	var readStream = fs.createReadStream(origin,options);
	var str = '';
	readStream.on('data',function(chunk){
		str += chunk;
	})
	readStream.on('end',function(){
		console.log(str);
	})
}

//复制
function copy(){

}

var copy = {
	say:function(){
		return 'origin is :' + origin + ' target is: '+ target;
	},
	setParams:function(obj){
		origin = obj.ori;
		target = obj.tar;
		syncType = obj.type || 'asnyc';

	},
	openFiles:openFile,
	writefile:writeFile,
	oprateDirectors:oprateDirectors,
	stream:stream

}

module.exports = copy;